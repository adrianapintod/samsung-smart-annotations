on:
  push:
    branches:
      - rest-api
  workflow_dispatch:

name: Deployment to AWS

jobs:
 deploy:
  name: Deploy
  runs-on: ubuntu-latest
  steps:
    - name: Checkout codebase üõéÔ∏è
      uses: actions/checkout@v2

    - name: Setup AWS credentials üîë
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # - name: Login to Amazon ECR üñ•Ô∏è
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    - name: Build container üèóÔ∏è
      run: |-
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "${{ secrets.ECR_URL }}"
        docker pull "${{ secrets.ECR_URL }}/${{ secrets.ECR_NAME }}:latest"
        docker tag "${{ secrets.ECR_URL }}/${{ secrets.ECR_NAME }}:latest" "${{ secrets.ECR_URL }}/${{ secrets.ECR_NAME }}:build"
        docker build \
          --cache-from "${{ secrets.ECR_URL }}/${{ secrets.ECR_NAME }}:build" \
          --tag "${{ secrets.ECR_URL }}/${{ secrets.ECR_NAME }}:$GITHUB_SHA" \
          --tag "${{ secrets.ECR_URL }}/${{ secrets.ECR_NAME }}:latest" \
          .

    - name: Publish container üì¶
      run: |-
        docker push "${{ secrets.ECR_URL }}/${{ secrets.ECR_NAME }}:latest"
        docker push "${{ secrets.ECR_URL }}/${{ secrets.ECR_NAME }}:$GITHUB_SHA"

    - name: Replace Task definition env vars üìù
      run: |-
        sed -i 's|__AWS_ACCESS_KEY_ID__|'"${{ secrets.AWS_ACCESS_KEY_ID }}"'|g; s|__AWS_SECRET_ACCESS_KEY__|'"${{ secrets.AWS_SECRET_ACCESS_KEY }}"'|g; s|__BUCKET__|'"${{ secrets.BUCKET }}"'|g;' ./.aws/task_definition.json;

    - name: Fill new container in task definition ‚úçÔ∏è
      id: render-task-definition
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ./.aws/task_definition.json
        container-name: smart-annotation-system
        image: "${{ secrets.ECR_URL }}/${{ secrets.ECR_NAME }}:latest"
    
    - name: Deploy Amazon ECS task definition üèß
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
        cluster: smart-annotation-system-cluster
        wait-for-service-stability: true
